name: Test

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - devel
    paths-ignore:
      - 'docker/**'
      - 'tutorial/**'
      - 'ChangeLog.md'
      - 'README.md'
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches:
      - main
      - devel

jobs:

  test:
    if: '! github.event.pull_request.draft'
    timeout-minutes: 20
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        docker-img:
          - docker.io/arangodb/arangodb:3.10.13
          - docker.io/arangodb/arangodb:3.11.8
          - docker.io/arangodb/arangodb-preview:3.12.0-alpha.1
          - docker.io/arangodb/enterprise:3.10.13
          - docker.io/arangodb/enterprise:3.11.8
          - docker.io/arangodb/enterprise-preview:3.12.0-alpha.1
        topology:
          - single
          - cluster
          - activefailover
        java-version:
          - 21
        user-language:
          - en
        exclude:
          - docker-img: docker.io/arangodb/arangodb-preview:3.12.0-alpha.1
            topology: activefailover
          - docker-img: docker.io/arangodb/enterprise-preview:3.12.0-alpha.1
            topology: activefailover

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{matrix.java-version}}
          distribution: 'adopt'
          cache: maven
      - name: Start Database
        run: ./docker/start_db.sh
        env:
          ARANGO_LICENSE_KEY: ${{ secrets.ARANGO_LICENSE_KEY }}
          STARTER_MODE: ${{matrix.topology}}
          DOCKER_IMAGE: ${{matrix.docker-img}}
      - name: Info
        run: mvn -version
      - name: Test
        run: mvn --no-transfer-progress -am -pl driver test -DargLine="-Duser.language=${{matrix.user-language}}" -DenableSlowTests=true

  test-ssl:
    if: '! github.event.pull_request.draft'
    timeout-minutes: 10
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        docker-img:
          - docker.io/arangodb/arangodb:3.11.8
        topology:
          - single
        java-version:
          - 21

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{matrix.java-version}}
          distribution: 'adopt'
          cache: maven
      - name: Start Database
        run: ./docker/start_db.sh
        env:
          ARANGO_LICENSE_KEY: ${{ secrets.ARANGO_LICENSE_KEY }}
          STARTER_MODE: ${{matrix.topology}}
          DOCKER_IMAGE: ${{matrix.docker-img}}
          SSL: true
      - name: Info
        run: mvn -version
      - name: Test
        run: mvn --no-transfer-progress -Dgroups=ssl -DSslTest=true -DenableSlowTests=true -am -pl driver test

  # test encodeURIComponent() and normalize('NFC') comparing to Javascript behavior
  test-graalvm:
    if: '! github.event.pull_request.draft'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21.0.1'
          distribution: 'graalvm'
          cache: 'maven'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Info
        run: mvn -version
      - name: Test
        run: mvn -e --no-transfer-progress -am -pl driver test -Dtest=graalvm.UnicodeUtilsTest -Dsurefire.failIfNoSpecifiedTests=false -DenableSlowTests=true

  test-jwt:
    if: '! github.event.pull_request.draft'
    timeout-minutes: 20
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        docker-img:
          - docker.io/arangodb/enterprise:3.11.8
        topology:
          - single
          - cluster
          - activefailover
        java-version:
          - 21
        user-language:
          - en

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{matrix.java-version}}
          distribution: 'adopt'
          cache: maven
      - name: Start Database
        run: ./docker/start_db.sh
        env:
          ARANGO_LICENSE_KEY: ${{ secrets.ARANGO_LICENSE_KEY }}
          STARTER_MODE: ${{matrix.topology}}
          DOCKER_IMAGE: ${{matrix.docker-img}}
      - name: Set JWT
        run: |
          ENDPOINT=$(./docker/find_active_endpoint.sh)
          echo "Active endpoint: $ENDPOINT"
          JWT=$(curl "http://$ENDPOINT/_db/_system/_open/auth" -X POST -d '{"username":"root","password":"test"}' | jq ".jwt" | xargs)
          echo "Setting JWT: $JWT"
          sed -i "/arangodb.password/c\arangodb.jwt=$JWT" driver/src/test/resources/arangodb.properties
      - name: Info
        run: mvn -version
      - name: Test
        run: mvn --no-transfer-progress -am -pl driver test -DargLine="-Duser.language=${{matrix.user-language}}" -DenableSlowTests=true

  jackson-test:
    if: '! github.event.pull_request.draft'
    timeout-minutes: 20
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        jackson-version:
          - 2.17.0
          - 2.16.2
          - 2.15.4
          - 2.14.3
          - 2.13.5
          - 2.12.7
          - 2.11.4
          - 2.10.5
        docker-img:
          - docker.io/arangodb/arangodb:3.11.8
        topology:
          - single
        java-version:
          - 21
        user-language:
          - en

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{matrix.java-version}}
          distribution: 'adopt'
          cache: maven
      - name: Start Database
        run: ./docker/start_db.sh
        env:
          ARANGO_LICENSE_KEY: ${{ secrets.ARANGO_LICENSE_KEY }}
          STARTER_MODE: ${{matrix.topology}}
          DOCKER_IMAGE: ${{matrix.docker-img}}
      - name: Info
        run: mvn -version
      - name: Test
        run: mvn --no-transfer-progress -am -pl driver test -Dadb.jackson.version=${{matrix.jackson-version}} -DenableSlowTests=true

  integration-tests:
    if: '! github.event.pull_request.draft'
    timeout-minutes: 20
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        docker-img:
          - docker.io/arangodb/arangodb-preview:3.12.0-alpha.1
        topology:
          - single
        java-version:
          - 17
          - 21
        compression:
          - true

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{matrix.java-version}}
          distribution: 'adopt'
          cache: maven
      - name: Start Database
        run: ./docker/start_db.sh
        env:
          STARTER_MODE: ${{matrix.topology}}
          DOCKER_IMAGE: ${{matrix.docker-img}}
          COMPRESSION: ${{matrix.compression}}
      - name: Info
        run: mvn -version
      - name: Install
        run: mvn --no-transfer-progress install -DskipTests=true -Dgpg.skip=true -Dmaven.javadoc.skip=true
      - name: Test internal-serde
        working-directory: integration-tests
        run: mvn --no-transfer-progress -Pinternal-serde test
      - name: Test jackson-serde
        working-directory: integration-tests
        run: mvn --no-transfer-progress -Pjackson-serde test
      - name: Test jsonb-serde
        working-directory: integration-tests
        run: mvn --no-transfer-progress -Pjsonb-serde test
      - name: Test plain
        working-directory: integration-tests
        run: mvn --no-transfer-progress -Pplain test

  sonar:
    if: '! github.event.pull_request.draft'
    timeout-minutes: 10
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        docker-img:
          - docker.io/arangodb/enterprise:3.11.8
        topology:
          - cluster
        java-version:
          - 17

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{matrix.java-version}}
          distribution: 'adopt'
          cache: maven
      - name: Start Database
        run: ./docker/start_db.sh
        env:
          ARANGO_LICENSE_KEY: ${{ secrets.ARANGO_LICENSE_KEY }}
          STARTER_MODE: ${{matrix.topology}}
          DOCKER_IMAGE: ${{matrix.docker-img}}
      - name: Info
        run: mvn -version
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn --no-transfer-progress -Pstatic-code-analysis -B -Dgpg.skip=true -am -pl driver verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=arangodb_arangodb-java-driver -Dmaven.javadoc.skip=true -DenableSlowTests=true
